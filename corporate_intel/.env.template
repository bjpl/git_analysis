# ================================================
# ENVIRONMENT TEMPLATE - Corporate Intelligence Platform
# ================================================
# Instructions:
# 1. Copy this file to .env: cp .env.template .env
# 2. Replace all CHANGE_ME values with secure passwords
# 3. Generate strong passwords: openssl rand -base64 32
# 4. NEVER commit .env file to version control
# ================================================

# ============================================
# DATABASE CONFIGURATION
# ============================================
# PostgreSQL with TimescaleDB for time-series data
POSTGRES_PASSWORD=CHANGE_ME_USE_STRONG_PASSWORD
POSTGRES_USER=intel_user
POSTGRES_DB=corporate_intel

# ============================================
# CACHING LAYER
# ============================================
# Redis for session management and caching
REDIS_PASSWORD=CHANGE_ME_USE_STRONG_PASSWORD

# ============================================
# OBJECT STORAGE
# ============================================
# MinIO S3-compatible storage for files and datasets
MINIO_ROOT_USER=CHANGE_ME_ADMIN_USERNAME
MINIO_ROOT_PASSWORD=CHANGE_ME_USE_STRONG_PASSWORD

# ============================================
# VISUALIZATION & ANALYTICS
# ============================================
# Apache Superset for business intelligence
SUPERSET_SECRET_KEY=CHANGE_ME_GENERATE_WITH_OPENSSL

# Grafana for monitoring dashboards
GRAFANA_PASSWORD=CHANGE_ME_USE_STRONG_PASSWORD

# ============================================
# APPLICATION CONFIGURATION
# ============================================
# Connection strings (populated from above variables)
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DB}
REDIS_URL=redis://:${REDIS_PASSWORD}@localhost:6379/0

# JWT Authentication
JWT_SECRET_KEY=CHANGE_ME_USE_STRONG_SECRET
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# ============================================
# MONITORING & OBSERVABILITY
# ============================================
PROMETHEUS_URL=http://localhost:9090
LOKI_URL=http://localhost:3100
RAY_DASHBOARD_URL=http://localhost:8265

# ============================================
# ENVIRONMENT METADATA
# ============================================
# Options: development, staging, production
ENVIRONMENT=development
DEBUG=true
LOG_LEVEL=INFO

# ============================================
# SECURITY SETTINGS
# ============================================
CORS_ORIGINS=["http://localhost:3000","http://localhost:8000"]
ALLOWED_HOSTS=localhost,127.0.0.1
SECURE_COOKIES=false
SESSION_TIMEOUT_MINUTES=60

# ============================================
# EXTERNAL SERVICES (Optional)
# ============================================
# OpenAI API for AI features
# OPENAI_API_KEY=sk-...

# Slack for notifications
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/...

# Email configuration
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASSWORD=your-app-password

# ============================================
# PASSWORD GENERATION GUIDE
# ============================================
# Generate secure passwords using these methods:
#
# Method 1 - OpenSSL (Recommended):
#   openssl rand -base64 32
#
# Method 2 - Python:
#   python -c "import secrets; print(secrets.token_urlsafe(32))"
#
# Method 3 - UUID (for keys):
#   python -c "import uuid; print(uuid.uuid4().hex)"
#
# Password Requirements:
# - Minimum 16 characters
# - Mix of uppercase, lowercase, numbers, special characters
# - Unique for each service
# - Store in a password manager for production
# ============================================