# GitHub Pages Deployment Workflow - Bulletproof Configuration
# Ensures reliable deployment with comprehensive error handling

name: Deploy VocabLens to GitHub Pages

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Permissions for GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages-${{ github.ref }}"
  cancel-in-progress: true

# Environment variables
env:
  NODE_VERSION: '18'
  NPM_VERSION: '9'

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
          
      - name: Verify Node and npm versions
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          
      - name: Clean install dependencies
        run: |
          npm ci --prefer-offline --no-audit --progress=false
          
      - name: Run security audit
        run: npm audit --audit-level=high
        continue-on-error: true
        
      - name: Lint code
        run: npm run lint
        continue-on-error: true
        
      - name: Type check
        run: npm run typecheck
        
      - name: Run tests
        run: npm run test:run
        continue-on-error: true
        
      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production
          VITE_APP_ENV: production
          CI: true
          
      - name: Verify build output
        run: |
          ls -la dist/
          echo "Build verification..."
          node scripts/build-verify.js
          
      - name: Run health checks
        run: node scripts/health-check.js
        
      - name: Test production build
        run: |
          npm run preview &
          PID=$!
          sleep 5
          curl -f http://localhost:4173 || exit 1
          kill $PID
          
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ matrix.node-version }}
          path: dist/
          retention-days: 1
          
      - name: Upload Pages artifact (Node 18 only)
        if: matrix.node-version == '18'
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

  # Deploy job (only for Node 18 build)
  deploy:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Verify deployment
        run: |
          echo "Deployment URL: ${{ steps.deployment.outputs.page_url }}"
          sleep 30
          curl -f "${{ steps.deployment.outputs.page_url }}" || exit 1
          
      - name: Notify deployment success
        if: success()
        run: |
          echo "✅ Deployment successful!"
          echo "URL: ${{ steps.deployment.outputs.page_url }}"
          
      - name: Notify deployment failure
        if: failure()
        run: |
          echo "❌ Deployment failed!"
          exit 1

  # Lighthouse audit job
  lighthouse:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/
          configPath: './lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true
          
      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: '.lighthouseci/'

  # Security scan job
  security:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run security audit
        run: npm audit --audit-level=moderate
        
      - name: Scan for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD

  # Performance monitoring job
  performance:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: deploy
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          
      - name: Bundle size check
        run: |
          npm ci
          npm run build
          npx bundlesize
          
      - name: Performance audit
        run: |
          # Add performance monitoring script
          node scripts/performance-audit.js