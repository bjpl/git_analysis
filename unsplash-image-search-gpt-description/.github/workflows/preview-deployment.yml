name: Preview Deployment

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened, ready_for_review]

env:
  NODE_VERSION: '18'

jobs:
  # Build and deploy preview
  preview-deploy:
    name: Deploy Preview
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    timeout-minutes: 20

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Setup preview environment
      run: |
        echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.SUPABASE_PREVIEW_URL }}" >> .env.local
        echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_PREVIEW_ANON_KEY }}" >> .env.local
        echo "NEXT_PUBLIC_APP_ENV=preview" >> .env.local
        echo "NEXT_PUBLIC_SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .env.local

    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        NEXT_PUBLIC_APP_ENV: preview

    - name: Deploy to Vercel Preview
      id: deploy
      uses: vercel/action@v1
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        github-comment: true
        vercel-args: '--env NEXT_PUBLIC_APP_ENV=preview'
      env:
        VERCEL_ENV: preview

    - name: Run preview tests
      run: |
        # Wait for deployment to be ready
        sleep 30
        
        # Basic smoke tests on preview URL
        npm run test:smoke -- --baseUrl=${{ steps.deploy.outputs.preview-url }}
        
        # Lighthouse audit on preview
        npm run lighthouse -- --url=${{ steps.deploy.outputs.preview-url }}
      continue-on-error: true

    - name: Run accessibility tests
      uses: pa11y/pa11y-action@v3.0.0
      with:
        url: ${{ steps.deploy.outputs.preview-url }}
        threshold: 10
        desktop: true
        useIncognitoTab: true
        actions: |
          wait for element input[type="text"] to be visible
          set field input[type="text"] to "nature"
          click element button[type="submit"]
          wait for element .image-result to be visible
      continue-on-error: true

    - name: Visual regression tests
      uses: chromaui/action@v1
      with:
        projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
        buildScriptName: 'storybook:build'
        onlyChanged: true
      continue-on-error: true

    - name: Comment PR with preview link
      uses: actions/github-script@v7
      with:
        script: |
          const previewUrl = '${{ steps.deploy.outputs.preview-url }}';
          const comment = `
          ## 🚀 Preview Deployment
          
          Your changes have been deployed to a preview environment:
          
          **🔗 [Visit Preview](${previewUrl})**
          
          ### 📊 Quick Checks
          - [ ] Preview loads successfully
          - [ ] Core functionality works
          - [ ] Mobile responsive design
          - [ ] Accessibility compliance
          
          ### 🧪 Test URLs
          - [Home Page](${previewUrl})
          - [Search Page](${previewUrl}/search)
          - [Vocabulary Page](${previewUrl}/vocabulary)
          - [Quiz Page](${previewUrl}/quiz)
          
          ### 📱 Device Testing
          Test on different devices and screen sizes:
          - [Mobile Preview](${previewUrl}?device=mobile)
          - [Tablet Preview](${previewUrl}?device=tablet)
          
          ---
          *This preview will be automatically deleted when the PR is merged or closed.*
          `;
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  # Security scan on preview
  security-preview:
    name: Security Scan Preview
    runs-on: ubuntu-latest
    needs: preview-deploy
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: OWASP ZAP Baseline Scan
      uses: zaproxy/action-baseline@v0.10.0
      with:
        target: ${{ needs.preview-deploy.outputs.preview-url }}
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a'
      continue-on-error: true

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zap-security-scan
        path: report_html.html

    - name: Comment security results
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const fs = require('fs');
          let securityComment = `
          ## 🔒 Security Scan Results
          
          Security baseline scan completed on preview deployment.
          
          **Status:** ${{ job.status == 'success' && '✅ No critical issues found' || '⚠️ Review required' }}
          
          📋 [View detailed security report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          `;
          
          // Find existing security comment and update it, or create new one
          const { data: comments } = await github.rest.issues.listComments({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          
          const existingComment = comments.find(c => c.body.includes('🔒 Security Scan Results'));
          
          if (existingComment) {
            await github.rest.issues.updateComment({
              comment_id: existingComment.id,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: securityComment
            });
          } else {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: securityComment
            });
          }

  # Performance audit on preview
  performance-preview:
    name: Performance Audit Preview
    runs-on: ubuntu-latest
    needs: preview-deploy
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          ${{ needs.preview-deploy.outputs.preview-url }}
          ${{ needs.preview-deploy.outputs.preview-url }}/search
          ${{ needs.preview-deploy.outputs.preview-url }}/vocabulary
        configPath: './lighthouse-ci.js'
        temporaryPublicStorage: true
        uploadArtifacts: true
        githubAppToken: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

    - name: Bundle size check
      run: |
        npm run build
        npm run analyze:bundle -- --json > bundle-analysis.json

    - name: Comment performance results
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          let performanceComment = `
          ## ⚡ Performance Audit Results
          
          Performance audit completed on preview deployment.
          
          ### 📊 Lighthouse Scores
          Results will be available in the [Lighthouse CI dashboard](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).
          
          ### 📦 Bundle Size
          Check the bundle analysis artifact for detailed size breakdown.
          
          ### 🎯 Performance Targets
          - Performance Score: >90
          - First Contentful Paint: <1.5s
          - Largest Contentful Paint: <2.5s
          - Cumulative Layout Shift: <0.1
          
          📋 [View detailed performance report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          `;
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: performanceComment
          });

  # Cleanup on PR close
  cleanup-preview:
    name: Cleanup Preview
    runs-on: ubuntu-latest
    if: github.event.action == 'closed'
    timeout-minutes: 5

    steps:
    - name: Delete preview deployment
      uses: vercel/action@v1
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--delete'

    - name: Comment cleanup
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '🧹 Preview deployment has been cleaned up.'
          });