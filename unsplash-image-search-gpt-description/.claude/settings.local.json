{
  "permissions": {
    "allow": [
      "mcp__ruv-swarm",
      "mcp__claude-flow",
      "Bash(npx:*)",
      "Bash(npm install:*)",
      "Bash(claude mcp:*)",
      "Bash(find:*)",
      "Bash(python:*)",
      "Bash(pip install:*)",
      "Bash(chmod:*)",
      "Bash(run_ui_tests.bat --help)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace/**)",
      "Bash(dir dist)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Read(/C:\\Users\\brand\\Development\\Project_Workspace\\image-questionnaire-gpt/**)",
      "Bash(dir:*)",
      "Bash(build_enhanced.bat)",
      "Bash(scriptsbuild_enhanced.bat)",
      "Bash(cmd /c:*)",
      "Bash(venvScriptsactivate.bat)",
      "Bash(pip --version)",
      "Bash(call venvScriptsactivate)",
      "Bash(venv/Scripts/python.exe:*)",
      "Bash(venv/Scripts/pip.exe:*)",
      "Bash(venv/Scripts/pyinstaller.exe:*)",
      "Bash(venv\\Scripts\\python.exe -m PyInstaller:*)",
      "Bash(powershell:*)",
      "Bash(npm create:*)",
      "Bash(npm run build:*)",
      "Bash(npm run dev:*)",
      "Bash(rm:*)",
      "Bash(npm run preview:*)",
      "Bash(tree:*)",
      "Bash(node:*)",
      "Bash(git log:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(cat:*)",
      "Bash(npm run verify-build:*)",
      "Bash(git submodule:*)",
      "Bash(git rm:*)",
      "Bash(git config:*)",
      "Bash(git reset:*)",
      "Bash(if [ -d \".git/modules\" ])",
      "Bash(else echo \".git/modules directory does not exist\")",
      "Bash(fi)",
      "Bash(git rev-parse:*)",
      "Bash(git ls-tree:*)",
      "Bash(timeout 120 npm run build)",
      "Bash(git clean:*)",
      "Bash(git checkout:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm ci:*)",
      "Bash(npm test)",
      "Bash(npm audit:*)",
      "Bash(wc:*)",
      "Bash(npm test:*)",
      "Bash(npm run type-check:*)",
      "Bash(timeout 30s npm run dev:*)",
      "Bash(vercel:*)",
      "Bash(timeout 10 vercel ls:*)",
      "Bash(pkill:*)",
      "Bash(npm start)",
      "Bash(curl:*)",
      "Bash(npm run netlify-build:*)",
      "WebFetch(domain:localhost)",
      "WebFetch(domain:localhost)",
      "WebFetch(domain:localhost)",
      "WebFetch(domain:localhost)",
      "Bash(netlify-cli validate:*)",
      "WebFetch(domain:vocablens.netlify.app)",
      "Bash(timeout:*)",
      "WebFetch(domain:github.com)",
      "Bash(if exist dist rd /s /q dist)",
      "Bash(test:*)",
      "WebFetch(domain:vocablens-pwa.netlify.app)",
      "Bash(nslookup:*)"
    ],
    "deny": [],
    "additionalDirectories": [
      "C:\\Users\\brand\\Development\\Project_Workspace\\anki_generator",
      "C:\\Users\\brand\\Development\\Project_Workspace"
    ]
  },
  "outputStyle": "Explanatory"
}