[project]
name = "myspanishapp"
version = "0.1.0"
description = "A comprehensive desktop application for tracking Spanish language learning"
authors = [
    {name = "bjpl", email = "brandon.lambert87@gmail.com"}
]
requires-python = ">=3.10"
dependencies = [
    "pyqt6>=6.8.1,<7.0.0",
    "pytest>=8.0.0,<9.0.0"
]

[project.optional-dependencies]
dev = [
    # Testing dependencies
    "pytest-cov>=4.1.0",
    "pytest-qt>=4.2.0", 
    "pytest-mock>=3.12.0",
    "pytest-xvfb>=3.0.0",
    "pytest-timeout>=2.2.0",
    "factory-boy>=3.3.0",
    "freezegun>=1.2.2",
    "responses>=0.24.0",
    
    # Security and quality
    "bandit>=1.7.5",
    "safety>=3.0.0",
    "ruff>=0.1.0",
    
    # Performance testing
    "locust>=2.17.0",
    "psutil>=5.9.0",
    
    # Fixtures and mocking
    "pytest-factoryboy>=2.6.0",
    "faker>=20.1.0",
    
    # Database testing
    "pytest-postgresql>=5.0.0",
    "sqlalchemy-utils>=0.41.1",
    
    # HTTP testing
    "httpx>=0.25.0",
    "requests-mock>=1.11.0",
    
    # Type checking
    "mypy>=1.7.0",
    "types-requests>=2.31.0",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--verbose",
    "--tb=short",
    "--cov=models",
    "--cov=views",
    "--cov=utils", 
    "--cov=controllers",
    "--cov-report=term-missing",
    "--cov-report=html:tests/coverage_html",
    "--cov-report=xml:tests/coverage.xml",
    "--cov-fail-under=80",
    "--durations=10",
    "--maxfail=5"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests", 
    "performance: Performance tests",
    "security: Security tests",
    "slow: Slow-running tests",
    "gui: Tests requiring GUI",
    "database: Tests that use database",
    "network: Tests that require network access",
    "accessibility: Accessibility tests"
]
timeout = 300
timeout_method = "thread"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore:.*PyQt6.*:DeprecationWarning"
]

[tool.coverage.run]
source = ["."]
omit = [
    "tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/env/*", 
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report] 
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError", 
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\(Protocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.coverage.html]
directory = "tests/coverage_html"

[tool.coverage.xml]
output = "tests/coverage.xml"

[tool.ruff]
line-length = 100
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "S",   # flake8-bandit (security)
]
ignore = [
    "E501",  # line too long, handled by line-length
    "B008",  # do not perform function calls in argument defaults
    "S101",  # use of assert (OK in tests)
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101", "S106", "S107", "S311"]  # Allow asserts and test-specific patterns

[tool.ruff.isort]
known-first-party = ["models", "views", "utils", "controllers"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.mypy."tests/*"]
disallow_untyped_defs = false

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # Skip assert_used test

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]
