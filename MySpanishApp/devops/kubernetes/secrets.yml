# Note: In production, use external secret management like HashiCorp Vault
# This is for development purposes only
apiVersion: v1
kind: Secret
metadata:
  name: spanishmaster-secrets
  namespace: spanishmaster
  labels:
    app: spanishmaster
type: Opaque
data:
  # Base64 encoded values - replace with actual secrets
  DATABASE_PASSWORD: cGFzc3dvcmQxMjM=  # password123
  REDIS_PASSWORD: cmVkaXNfcGFzc3dvcmQ=  # redis_password
  JWT_SECRET: anlPdGhlc2VjcmV0a2V5Zm9yand0dG9rZW5z  # jwtTheSecretKeyForJwtTokens
  ENCRYPTION_KEY: ZW5jcnlwdGlvbl9rZXlfMzJfYnl0ZXNfbG9uZw==  # encryption_key_32_bytes_long
  API_KEY: YXBpX2tleV9mb3JfZXh0ZXJuYWxfc2VydmljZXM=  # api_key_for_external_services
---
apiVersion: v1
kind: Secret
metadata:
  name: spanishmaster-secrets
  namespace: spanishmaster-staging
  labels:
    app: spanishmaster
type: Opaque
data:
  # Base64 encoded values for staging
  DATABASE_PASSWORD: c3RhZ2luZ19wYXNzd29yZA==  # staging_password
  REDIS_PASSWORD: c3RhZ2luZ19yZWRpc19wYXNz  # staging_redis_pass
  JWT_SECRET: c3RhZ2luZ19qd3Rfc2VjcmV0X2tleQ==  # staging_jwt_secret_key
  ENCRYPTION_KEY: c3RhZ2luZ19lbmNyeXB0aW9uX2tleV8zMg==  # staging_encryption_key_32
  API_KEY: c3RhZ2luZ19hcGlfa2V5  # staging_api_key
---
# TLS Secret for HTTPS
apiVersion: v1
kind: Secret
metadata:
  name: spanishmaster-tls
  namespace: spanishmaster
  labels:
    app: spanishmaster
type: kubernetes.io/tls
data:
  # Replace with actual certificate and key
  tls.crt: LS0tLS1CRUdJTi...
  tls.key: LS0tLS1CRUdJTi...