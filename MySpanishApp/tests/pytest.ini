[pytest]
# Configuration for pytest testing framework

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Directories to search for tests
testpaths = tests

# Minimum version
minversion = 8.0

# Addopts - options always used
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=models
    --cov=views
    --cov=utils
    --cov=controllers
    --cov-report=term-missing
    --cov-report=html:tests/coverage_html
    --cov-report=xml:tests/coverage.xml
    --cov-fail-under=80
    --durations=10
    --maxfail=5

# Markers definition
markers =
    unit: Unit tests
    integration: Integration tests  
    e2e: End-to-end tests
    performance: Performance tests
    security: Security tests
    slow: Slow-running tests
    gui: Tests requiring GUI
    database: Tests that use database
    network: Tests that require network access

# Test timeouts
timeout = 300
timeout_method = thread

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*PyQt6.*:DeprecationWarning

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage settings
[coverage:run]
source = .
omit = 
    tests/*
    */test_*
    setup.py
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = tests/coverage_html

[coverage:xml]
output = tests/coverage.xml